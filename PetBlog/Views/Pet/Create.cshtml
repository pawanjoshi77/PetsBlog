@model PetBlog.Models.Pet

@{
    ViewData["Title"] = "Create";
}

<h2>Create a new Pet</h2>

@using (Html.BeginForm("Create", "Pet"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.PetName, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.PetName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PetName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PetType, htmlAttributes: new { @class = "control-label col-md-2" })

        <div>
            @Html.EditorFor(model => model.PetType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PetType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PetDOB, htmlAttributes: new { @class = "control-label col-md-2" })

        <div>
            @Html.EditorFor(model => model.PetDOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PetDOB, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.HasPic, htmlAttributes: new { @class = "control-label col-md-2" })

        <div>
            @Html.EditorFor(model => model.HasPic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HasPic, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" />
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

}